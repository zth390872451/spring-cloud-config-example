<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.company</groupId>
	<artifactId>config-client-eureka-rabbit-node01</artifactId>
	<version>1.0.0</version>
	<packaging>jar</packaging>

	<name>config-client-eureka-rabbit-node01</name>
	<description>Spring Cloud project</description>

	<parent>
		<groupId>com.company</groupId>
		<artifactId>spring-cloud-config-example</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>

	<dependencies>
		<!--在实际工作过程中，重试是一个经常使用的手段。比如MQ发送消息失败，会采取重试手段，
		比如工程中使用RPC请求外部服务,可能因为网络		波动出现超时而采取重试手段......
		可以看见重试操作是非常常见的一种处理问题,系统设计的手段
		而在之前我们项目中处理重拾操作依赖MQ自身的重试机制,但是这种机制不是很灵活,如果某些
		功能没有使用MQ的话,那么就不是那么方便了-->
		<dependency>
			<groupId>org.springframework.retry</groupId>
			<artifactId>spring-retry</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-eureka</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-bus-amqp</artifactId>
		</dependency>
	</dependencies>

</project>
